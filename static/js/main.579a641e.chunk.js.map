{"version":3,"sources":["Input.js","Button.js","actions/index.js","Item.js","Board.js","DraggableBoard.js","HorizontalContainer.js","App.js","registerServiceWorker.js","reducers/boards.js","reducers/index.js","index.js"],"names":["StyledInput","styled","input","_templateObject","Input","react_default","a","createElement","this","props","React","Component","StyledButton","button","Button_templateObject","Button","generateId","Math","round","random","Number","MAX_SAFE_INTEGER","ItemContainer","div","Item_templateObject","RemoveItemButton","_templateObject2","connect","dispatch","removeItem","id","type","react_beautiful_dnd_esm","draggableId","index","provided","snapshot","Object","assign","ref","innerRef","draggableProps","dragHandleProps","children","onClick","StyledBoard","Board_templateObject","Title","Board_templateObject2","p","disabled","FooterContainer","_templateObject3","RemoveBoardButton","_templateObject4","ownProps","renameBoard","title","addItem","boardId","removeBoard","_useState","useState","_useState2","slicedToArray","newItemName","setNewItemName","_useState3","_useState4","editBoardNameMode","setEditBoardNameMode","_useState5","_useState6","newBoardName","setNewBoardName","inputRef","createRef","useEffect","current","focus","items","map","item","src_Item","key","value","onChange","e","target","onKeyPress","droppableId","style","droppableProps","placeholder","src_Input","src_Button","DraggableBoard","src_Board","HorizontalContainer","HorizontalContainer_templateObject","AppContainer","App_templateObject","onBeforeDragStart","onDragStart","onDragUpdate","state","boards","addBoard","name","moveItem","from","to","source","destination","moveBoard","b","src_DraggableBoard","onDragEnd","result","src_HorizontalContainer","marginTop","display","flexDirection","margin","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","storedState","JSON","parse","localStorage","getItem","initialState","insertAtIndex","x","i","arr","concat","slice","length","arguments","undefined","action","newState","toConsumableArray","setItem","stringify","filter","board","newItems","objectSpread","_","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.579a641e.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledInput = styled.input`\r\n  color: #404040;\r\n  width: 135pt;\r\n  padding-left: 3pt;\r\n  margin-right: 10pt;\r\n  font-size: 13t;\r\n  height: 17pt;\r\n  border: 1px solid lightgray;\r\n  border-radius: 2pt;\r\n  ::placeholder {\r\n    color: #888;\r\n  }\r\n`\r\n\r\nclass Input extends React.Component {\r\n  render () {\r\n    return (\r\n      <StyledInput {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Input\r\n","\r\nimport React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled.button`\r\n  padding-left: 3pt;\r\n  font-size: 13t;\r\n  height: 20pt;\r\n  border: 1px solid lightgray;\r\n  border-radius: 2pt;\r\n  background: linear-gradient(white, #eee);\r\n  outline: none;\r\n  color: #404040;\r\n  &:hover {\r\n    background: linear-gradient(white, #e0ffe0);\r\n  }\r\n`\r\n\r\nclass Button extends React.Component {\r\n  render () {\r\n    return (\r\n      <StyledButton {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button\r\n","\r\nconst generateId = () => Math.round(Math.random()*Number.MAX_SAFE_INTEGER)\r\n\r\nexport const addBoard = title => ({\r\n  type: 'ADD_BOARD',\r\n  id: generateId(),\r\n  title\r\n})\r\n\r\nexport const removeBoard = id => ({\r\n  type: 'REMOVE_BOARD',\r\n  id\r\n})\r\n\r\nexport const addItem = (title, id) => ({\r\n  type: 'ADD_ITEM',\r\n  boardId: id,\r\n  id: generateId(),\r\n  title\r\n})\r\n\r\nexport const removeItem = id => ({\r\n  type: 'REMOVE_ITEM',\r\n  id\r\n})\r\n\r\nexport const renameBoard = (id, title) => ({\r\n  type: 'RENAME_BOARD',\r\n  id,\r\n  title\r\n})\r\n\r\nexport const moveItem = (source, destination) => ({\r\n  type: 'MOVE_ITEM',\r\n  source,\r\n  destination\r\n})\r\n\r\nexport const moveBoard = (from, to) => ({\r\n  type: 'MOVE_BOARD',\r\n  from,\r\n  to\r\n})\r\n","\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  removeItem,\r\n} from './actions'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nconst ItemContainer = styled.div`\r\n  color: #404040;\r\n  padding: 5pt;\r\n  border-bottom: 1pt solid lightgray;\r\n`\r\n\r\nconst RemoveItemButton = styled.div`\r\n  position: absolute;\r\n  margin-top: -18pt;\r\n  font-size: 17pt;\r\n  margin-left: 175pt;\r\n  cursor: pointer;\r\n  color: lightgray;\r\n  &:hover {\r\n    color: #f88;\r\n  }\r\n`\r\n\r\nconst Item = props => {\r\n  return (\r\n    <Draggable\r\n      draggableId={props.id + ''}\r\n      index={props.index}\r\n    >\r\n      {(provided, snapshot) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <ItemContainer>\r\n            <span>\r\n              {props.children}\r\n            </span>\r\n            <RemoveItemButton\r\n              onClick={() => props.removeItem(props.id)}\r\n            >\r\n              🞩\r\n            </RemoveItemButton>\r\n          </ItemContainer>\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  dispatch => ({\r\n    removeItem: id => dispatch(removeItem(id))\r\n  })\r\n)(Item)\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport Item from './Item'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  renameBoard,\r\n  addItem,\r\n  removeBoard\r\n} from './actions'\r\n\r\nconst StyledBoard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20pt;\r\n  margin-right: 10pt;\r\n  width: 200pt;\r\n  height: 400pt;\r\n  border: 1pt solid lightgray;\r\n  border-radius: 2pt;\r\n  box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.2);\r\n  padding: 10pt;\r\n  background: linear-gradient(to bottom right, white, #f0f0f0);\r\n`\r\n\r\nconst Title = styled.input`\r\n  align-self: flex-start;\r\n  font-size: 16pt;\r\n  text-align: center;\r\n  border: none;\r\n  border: ${p => p.disabled ? '1px solid transparent' : '1px dashed lightgray'};\r\n  border-bottom: 1pt solid gray;\r\n  box-sizing: border-box;\r\n  padding-top: 10pt;\r\n  padding-bottom: 18pt;\r\n  height: 10pt;\r\n  width: 200pt;\r\n  color: #404040;\r\n  background-color: inherit;\r\n  outline: none;\r\n`\r\n\r\nconst FooterContainer = styled.div`\r\n  margin-top: auto;\r\n`\r\n\r\nconst RemoveBoardButton = styled.div`\r\n  position: absolute;\r\n  margin-left: 185pt;\r\n  margin-top: -5pt;\r\n  font-size: 20pt;\r\n  cursor: pointer;\r\n  color: #888;\r\n  &:hover {\r\n    color: #f88;\r\n  }\r\n`\r\n\r\nconst Board = props => {\r\n  const [newItemName, setNewItemName] = useState('')\r\n  const [editBoardNameMode, setEditBoardNameMode] = useState(false)\r\n  const [newBoardName, setNewBoardName] = useState(props.title)\r\n\r\n  const inputRef = React.createRef()\r\n\r\n  const addItem = () => {\r\n    props.addItem(newItemName)\r\n    setNewItemName('')\r\n  }\r\n\r\n  const renameBoard = () => {\r\n    props.renameBoard(newBoardName)\r\n    setEditBoardNameMode(false)\r\n  }\r\n\r\n  useEffect(() => inputRef.current.focus(), [editBoardNameMode])\r\n\r\n  const items = props.items && props.items.map((item, index) => (\r\n    <Item\r\n      key={item.id}\r\n      id={item.id}\r\n      index={index}\r\n    >\r\n      {item.title}\r\n    </Item>\r\n  ))\r\n\r\n  return (\r\n    <StyledBoard>\r\n      <div\r\n        onClick={() => !editBoardNameMode ? setEditBoardNameMode(true) : null}\r\n      >\r\n        <Title\r\n          value={newBoardName}\r\n          onChange={e => setNewBoardName(e.target.value)}\r\n          onKeyPress={e => e.key === 'Enter' && renameBoard()}\r\n          disabled={!editBoardNameMode}\r\n          innerRef={inputRef}\r\n        />\r\n      </div>\r\n      <RemoveBoardButton\r\n        onClick={props.removeBoard}\r\n      >\r\n        ⨯\r\n      </RemoveBoardButton>\r\n      <Droppable\r\n        droppableId={props.id + ''}\r\n        type=\"ITEM\"\r\n      >\r\n        {(provided, snapshot) => (\r\n          <div\r\n            ref={provided.innerRef}\r\n            style={{\r\n            }}\r\n            {...provided.droppableProps}\r\n          >\r\n            { items }\r\n            { provided.placeholder }\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n      <FooterContainer>\r\n        <Input\r\n          value={newItemName}\r\n          placeholder='Item name'\r\n          onChange={e => setNewItemName(e.target.value)}\r\n          onKeyPress={e => e.key === 'Enter' && addItem()}\r\n        />\r\n        <Button\r\n          onClick={addItem}\r\n        >\r\n          Add item\r\n        </Button>\r\n      </FooterContainer>\r\n    </StyledBoard>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  (dispatch, ownProps) => ({\r\n    renameBoard: title => dispatch(renameBoard(ownProps.id, title)),\r\n    addItem: title => dispatch(addItem(title, ownProps.id)),\r\n    removeBoard: () => dispatch(removeBoard(ownProps.id))\r\n  })\r\n)(Board)\r\n","\r\nimport React from 'react'\r\nimport Board from './Board'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\n\r\nconst DraggableBoard = props => {\r\n  return (\r\n    <Draggable\r\n      draggableId={props.id + ''}\r\n      index={props.index}\r\n    >\r\n      {(provided, snapshot) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Board {...props} />\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  )\r\n}\r\n\r\nexport default DraggableBoard\r\n","\r\nimport styled from 'styled-components'\r\n\r\nconst HorizontalContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: auto;\r\n`\r\n\r\nexport default HorizontalContainer\r\n","\nimport React, { useState } from 'react';\nimport DraggableBoard from './DraggableBoard'\nimport Input from './Input'\nimport styled from 'styled-components'\nimport HorizontalContainer from './HorizontalContainer'\nimport Button from './Button'\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\n\nimport { connect } from 'react-redux'\nimport {\n  addBoard,\n  moveItem,\n  moveBoard\n} from './actions'\n\nconst AppContainer = styled.div`\n  display: inline-block;\n  padding: 40pt;\n  display: flex;\n  flex-direction: column;\n  margin: 20pt;\n`\n\nconst onBeforeDragStart = () => {}\nconst onDragStart = () => {}\nconst onDragUpdate = () => {}\n\nconst App = props => {\n  const [newBoardName, setNewBoardName] = useState('')\n\n  const boards = props.boards && props.boards.map((b, index) => (\n    <DraggableBoard\n      index={index}\n      key={b.id}\n      id={b.id}\n      items={b.items}\n      title={b.title}\n    />\n  ))\n\n  const addBoard = () => {\n    props.addBoard(newBoardName)\n    setNewBoardName('')\n  }\n\n  const onDragEnd = result => {\n    if (!result.destination) { return }\n\n    if (result.type === 'ITEM') {\n      props.moveItem(result.source, result.destination)      \n    }\n\n    if (result.type === 'BOARD') {\n      props.moveBoard(result.source.index, result.destination.index)\n    }\n  }\n\n  return (\n    <DragDropContext\n      onBeforeDragStart={onBeforeDragStart}\n      onDragStart={onDragStart}\n      onDragUpdate={onDragUpdate}\n      onDragEnd={onDragEnd}\n    >\n      <AppContainer>\n        <HorizontalContainer>\n          <Input\n            value={newBoardName}\n            placeholder='Board name'\n            onChange={e => setNewBoardName(e.target.value)}\n            onKeyPress={e => e.key === 'Enter' && addBoard()}\n          />\n            <div style={{marginTop: '50pt'}} />\n            <Button\n              onClick={addBoard}\n            >\n              Add board\n            </Button>\n        </HorizontalContainer>\n        <Droppable\n          droppableId={props.id + ''}\n          type=\"BOARD\"\n        >\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                margin: 'auto',\n              }}\n              {...provided.droppableProps}\n            >\n              { boards }\n              { provided.placeholder }\n            </div>\n          )}\n          </Droppable>\n      </AppContainer>\n    </DragDropContext>\n  )\n}\n\nexport default connect(\n  state => ({ boards: state.boards }),\n  dispatch => ({\n    addBoard: name => dispatch(addBoard(name)),\n    moveItem: (from, to) => dispatch(moveItem(from, to)),\n    moveBoard: (from, to) => dispatch(moveBoard(from, to))\n  })\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst storedState = JSON.parse(localStorage.getItem('state'))\r\n\r\nconst initialState = storedState ? storedState : []\r\n\r\nconst boards = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'ADD_BOARD':\r\n    let newState = [\r\n      ...state,\r\n      {\r\n        title: action.title,\r\n        id: action.id\r\n      }\r\n    ]\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n\r\n    return newState\r\n  case 'REMOVE_BOARD':\r\n    newState = state.filter(x => x.id !== action.id)\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n\r\n    return newState\r\n  case 'ADD_ITEM':\r\n    newState = state.map(board => {\r\n      if (board.id === action.boardId) {\r\n        const items = board.items ? board.items : []\r\n        const newItems = [\r\n          ...items,\r\n          {\r\n            title: action.title,\r\n            id: action.id\r\n          }\r\n        ]\r\n\r\n        return {\r\n          ...board,\r\n          items: newItems\r\n        }\r\n      } else {\r\n        return board\r\n      }\r\n    })\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n    return newState\r\n  case 'REMOVE_ITEM':\r\n    newState = state.map(board => {\r\n      return {\r\n        ...board,\r\n        items: board.items ? board.items.filter(item => item.id !== action.id) : []\r\n      }\r\n    })\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n    return newState\r\n  case 'RENAME_BOARD':\r\n    newState = state.map(board => {\r\n      if (board.id === action.id) {\r\n        return {\r\n          ...board,\r\n          title: action.title\r\n        }\r\n      } else {\r\n        return board\r\n      }\r\n    })\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n\r\n    return newState\r\n  case 'MOVE_ITEM':\r\n    let item\r\n\r\n    newState = state.map(board => {\r\n      if (action.source.droppableId === board.id + '') {\r\n        item = board.items[action.source.index]\r\n        return {\r\n          ...board,\r\n          items: board.items.filter((_, i) => i !== action.source.index)\r\n        }\r\n      } else {\r\n        return board\r\n      }\r\n    })\r\n\r\n    newState = newState.map(board => {\r\n      if (action.destination.droppableId === board.id + ''){\r\n        return {\r\n          ...board,\r\n          items: insertAtIndex(item, action.destination.index, board.items)\r\n        }\r\n      } else {\r\n        return board\r\n      }\r\n    })\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n\r\n    return newState\r\n  case 'MOVE_BOARD':\r\n    console.log('moving board')\r\n    return state\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nconst insertAtIndex = (x, i, arr) => [].concat(arr.slice(0, i), x, arr.slice(i, arr.length))\r\n\r\nexport default boards\r\n","\r\nimport { combineReducers } from 'redux'\r\nimport boards from './boards'\r\n\r\nexport default combineReducers({\r\n  boards\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}