{"version":3,"sources":["Input.js","Button.js","actions/index.js","Item.js","Board.js","HorizontalContainer.js","App.js","registerServiceWorker.js","reducers/boards.js","reducers/index.js","index.js"],"names":["StyledInput","styled","input","_templateObject","Input","react_default","a","createElement","this","props","React","Component","StyledButton","button","Button_templateObject","Button","generateId","Math","round","random","Number","MAX_SAFE_INTEGER","ItemContainer","div","Item_templateObject","MoveItemButton","_templateObject2","connect","dispatch","removeItem","id","type","moveItemToNextBoard","onClick","children","StyledBoard","Board_templateObject","Title","Board_templateObject2","FooterContainer","_templateObject3","RemoveBoardButton","_templateObject4","src_Board","ownProps","renameBoard","title","addItem","boardId","removeBoard","_useState","useState","_useState2","Object","slicedToArray","newItemName","setNewItemName","_useState3","_useState4","editBoardNameMode","setEditBoardNameMode","_useState5","_useState6","newBoardName","setNewBoardName","inputRef","createRef","useEffect","current","focus","items","map","item","src_Item","key","value","onChange","e","target","onKeyPress","disabled","innerRef","src_Input","src_Button","HorizontalContainer","HorizontalContainer_templateObject","AppContainer","App_templateObject","state","boards","addBoard","name","b","src_HorizontalContainer","style","marginTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","storedState","JSON","parse","localStorage","getItem","initialState","arguments","length","undefined","action","newState","toConsumableArray","concat","setItem","stringify","filter","x","board","newItems","objectSpread","storedItem","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2b2b0bec.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledInput = styled.input`\r\n  color: #404040;\r\n  width: 135pt;\r\n  padding-left: 3pt;\r\n  margin-right: 10pt;\r\n  font-size: 13t;\r\n  height: 17pt;\r\n  border: 1px solid lightgray;\r\n`\r\n\r\nclass Input extends React.Component {\r\n  render () {\r\n    return (\r\n      <StyledInput {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Input\r\n","\r\nimport React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledButton = styled.button`\r\n  padding-left: 3pt;\r\n  font-size: 13t;\r\n  height: 20pt;\r\n  border: 1px solid lightgray;\r\n  background: linear-gradient(white, lightgray);\r\n  outline: none;\r\n  color: #404040;\r\n  &:hover {\r\n    background: linear-gradient(white, #d0ffd0);\r\n  }\r\n`\r\n\r\nclass Button extends React.Component {\r\n  render () {\r\n    return (\r\n      <StyledButton {...this.props} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Button\r\n","\r\nconst generateId = () => Math.round(Math.random()*Number.MAX_SAFE_INTEGER)\r\n\r\nexport const addBoard = title => ({\r\n  type: 'ADD_BOARD',\r\n  id: generateId(),\r\n  title\r\n})\r\n\r\nexport const removeBoard = id => ({\r\n  type: 'REMOVE_BOARD',\r\n  id\r\n})\r\n\r\nexport const addItem = (title, id) => ({\r\n  type: 'ADD_ITEM',\r\n  boardId: id,\r\n  id: generateId(),\r\n  title\r\n})\r\n\r\nexport const removeItem = id => ({\r\n  type: 'REMOVE_ITEM',\r\n  id\r\n})\r\n\r\nexport const moveItemToNextBoard = id => ({\r\n  type: 'MOVE_ITEM_TO_NEXT_BOARD',\r\n  id\r\n})\r\n\r\nexport const renameBoard = (id, title) => ({\r\n  type: 'RENAME_BOARD',\r\n  id,\r\n  title\r\n})\r\n","\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  removeItem,\r\n  moveItemToNextBoard\r\n} from './actions'\r\n\r\nconst ItemContainer = styled.div`\r\n  color: #404040;\r\n  padding: 5pt;\r\n  border-bottom: 1pt solid lightgray;\r\n`\r\n\r\nconst MoveItemButton = styled.div`\r\n  position: absolute;\r\n  margin-top: -18pt;\r\n  font-size: 20pt;\r\n  margin-left: 175pt;\r\n  cursor: pointer;\r\n  color: gray;\r\n  &:hover {\r\n    color: black;\r\n  }\r\n`\r\n\r\nconst Item = props => {\r\n  return (\r\n    <ItemContainer>\r\n      <span\r\n        onClick={() => props.removeItem(props.id)}\r\n        >\r\n        {props.children}\r\n      </span>\r\n      <MoveItemButton\r\n        onClick={() => props.moveItemToNextBoard(props.id)}\r\n        >\r\n        →\r\n      </MoveItemButton>\r\n    </ItemContainer>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  dispatch => ({\r\n    removeItem: id => dispatch(removeItem(id)),\r\n    moveItemToNextBoard: id => dispatch(moveItemToNextBoard(id))\r\n  })\r\n)(Item)\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components'\r\nimport Input from './Input'\r\nimport Button from './Button'\r\nimport Item from './Item'\r\n\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  renameBoard,\r\n  addItem,\r\n  removeBoard\r\n} from './actions'\r\n\r\nconst StyledBoard = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20pt;\r\n  margin-right: 10pt;\r\n  width: 200pt;\r\n  height: 400pt;\r\n  border: 1pt solid lightgray;\r\n  box-shadow: 0px 0px 5px 0px rgba(0,0,0,0.2);\r\n  padding: 10pt;\r\n  background: linear-gradient(to bottom right, white, #f0f0f0);\r\n`\r\n\r\nconst Title = styled.input`\r\n  align-self: flex-start;\r\n  font-size: 16pt;\r\n  text-align: center;\r\n  border: none;\r\n  border-bottom: 1pt solid gray;\r\n  padding-top: 4pt;\r\n  padding-bottom: 12pt;\r\n  height: 10pt;\r\n  width: 200pt;\r\n  color: #404040;\r\n  background-color: inherit;\r\n  outline: none;\r\n`\r\n\r\nconst FooterContainer = styled.div`\r\n  margin-top: auto;\r\n`\r\n\r\nconst RemoveBoardButton = styled.div`\r\n  position: absolute;\r\n  margin-left: 191pt;\r\n  cursor: pointer;\r\n  color: gray;\r\n  &:hover {\r\n    color: red;\r\n  }\r\n`\r\n\r\nconst Board = props => {\r\n  const [newItemName, setNewItemName] = useState('')\r\n  const [editBoardNameMode, setEditBoardNameMode] = useState(false)\r\n  const [newBoardName, setNewBoardName] = useState(props.title)\r\n\r\n  const inputRef = React.createRef()\r\n\r\n  const addItem = () => {\r\n    props.addItem(newItemName)\r\n    setNewItemName('')\r\n  }\r\n\r\n  const renameBoard = () => {\r\n    props.renameBoard(newBoardName)\r\n    setEditBoardNameMode(false)\r\n  }\r\n\r\n  useEffect(() => inputRef.current.focus(), [editBoardNameMode])\r\n\r\n  const items = props.items && props.items.map(item => (\r\n    <Item key={item.id} id={item.id}>{item.title}</Item>\r\n  ))\r\n\r\n  return (\r\n    <StyledBoard>\r\n      <div\r\n        onClick={() => !editBoardNameMode ? setEditBoardNameMode(true) : null}\r\n      >\r\n        <Title\r\n          value={newBoardName}\r\n          onChange={e => setNewBoardName(e.target.value)}\r\n          onKeyPress={e => e.key === 'Enter' && renameBoard()}\r\n          disabled={!editBoardNameMode}\r\n          innerRef={inputRef}\r\n        />\r\n      </div>\r\n      <RemoveBoardButton\r\n        onClick={props.removeBoard}\r\n      >\r\n        X\r\n      </RemoveBoardButton>\r\n      { items }\r\n      <FooterContainer>\r\n        <Input\r\n          value={newItemName}    \r\n          onChange={e => setNewItemName(e.target.value)}\r\n          onKeyPress={e => e.key === 'Enter' && addItem()}\r\n        />\r\n        <Button\r\n          onClick={addItem}\r\n        >\r\n          Add item\r\n        </Button>\r\n      </FooterContainer>\r\n    </StyledBoard>\r\n  )\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  (dispatch, ownProps) => ({\r\n    renameBoard: title => dispatch(renameBoard(ownProps.id, title)),\r\n    addItem: title => dispatch(addItem(title, ownProps.id)),\r\n    removeBoard: () => dispatch(removeBoard(ownProps.id))\r\n  })\r\n)(Board)\r\n","\r\nimport styled from 'styled-components'\r\n\r\nconst HorizontalContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: auto;\r\n`\r\n\r\nexport default HorizontalContainer\r\n","\nimport React, { useState } from 'react';\nimport Board from './Board'\nimport Input from './Input'\nimport styled from 'styled-components'\nimport HorizontalContainer from './HorizontalContainer'\nimport Button from './Button'\n\nimport { connect } from 'react-redux'\nimport {\n  addBoard\n} from './actions'\n\nconst AppContainer = styled.div`\n  display: inline-block;\n  padding: 40pt;\n  display: flex;\n  flex-direction: column;\n  margin: 20pt;\n`\n\nconst App = props => {\n  const [newBoardName, setNewBoardName] = useState('')\n\n  const boards = props.boards && props.boards.map(b => (\n    <Board key={b.id} id={b.id} items={b.items} title={b.title} />\n  ))\n\n  const addBoard = () => {\n    props.addBoard(newBoardName)\n    setNewBoardName('')\n  }\n\n  return (\n    <AppContainer>\n      <HorizontalContainer>\n        <Input\n          value={newBoardName}\n          onChange={e => setNewBoardName(e.target.value)}\n          onKeyPress={e => e.key === 'Enter' && addBoard()}\n        />\n        <div style={{marginTop: '50pt'}} />\n        <Button\n          onClick={addBoard}\n        >\n          Add board\n        </Button>\n      </HorizontalContainer>\n      <HorizontalContainer>\n        { boards }\n      </HorizontalContainer>\n    </AppContainer>\n  )\n}\n\nexport default connect(\n  state => ({ boards: state.boards }),\n  dispatch => ({ addBoard: name => dispatch(addBoard(name)) })\n)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nconst storedState = JSON.parse(localStorage.getItem('state'))\r\n\r\nconst initialState = storedState ? storedState : []\r\n\r\nconst boards = (state = initialState, action) => {\r\n  switch (action.type) {\r\n  case 'ADD_BOARD':\r\n    let newState = [\r\n      ...state,\r\n      {\r\n        title: action.title,\r\n        id: action.id\r\n      }\r\n    ]\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n\r\n    return newState\r\n  case 'REMOVE_BOARD':\r\n    newState = state.filter(x => x.id !== action.id)\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n\r\n    return newState\r\n  case 'ADD_ITEM':\r\n    newState = state.map(board => {\r\n      if (board.id === action.boardId) {\r\n        const items = board.items ? board.items : []\r\n        const newItems = [\r\n          ...items,\r\n          {\r\n            title: action.title,\r\n            id: action.id\r\n          }\r\n        ]\r\n\r\n        return {\r\n          ...board,\r\n          items: newItems\r\n        }\r\n      } else {\r\n        return board\r\n      }\r\n    })\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n    return newState\r\n  case 'REMOVE_ITEM':\r\n    newState = state.map(board => {\r\n      return {\r\n        ...board,\r\n        items: board.items ? board.items.filter(item => item.id !== action.id) : []\r\n      }\r\n    })\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n    return newState\r\n  case 'MOVE_ITEM_TO_NEXT_BOARD':\r\n    let storedItem\r\n\r\n    newState = state.map(board => {\r\n      if (board.items) {\r\n        board.items.map(item => {\r\n          if (item.id === action.id) {\r\n            storedItem = item\r\n          }\r\n\r\n          return null\r\n        })\r\n      }\r\n\r\n      let newItems = board.items ? board.items.filter(item => item.id !== action.id) : []\r\n\r\n      if (storedItem && newItems.length === (board.items ? board.items.length : 0)) {\r\n\r\n        newItems = [\r\n          ...newItems,\r\n          storedItem\r\n        ]\r\n\r\n        storedItem = null\r\n      }\r\n\r\n      return {\r\n        ...board,\r\n        items: newItems\r\n      }\r\n    })\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n\r\n    return newState\r\n  case 'RENAME_BOARD':\r\n    newState = state.map(board => {\r\n      if (board.id === action.id) {\r\n        return {\r\n          ...board,\r\n          title: action.title\r\n        }\r\n      } else {\r\n        return board\r\n      }\r\n    })\r\n\r\n    localStorage.setItem('state', JSON.stringify(newState))\r\n\r\n    return newState\r\n  default:\r\n    return state\r\n  }\r\n}\r\n\r\nexport default boards\r\n","\r\nimport { combineReducers } from 'redux'\r\nimport boards from './boards'\r\n\r\nexport default combineReducers({\r\n  boards\r\n})\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}